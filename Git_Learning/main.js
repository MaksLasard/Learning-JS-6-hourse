/*
Git - это система контроля версий. 
Используется для того чтобы несколько разработчиков могли работать над одним проектом и не мешать друг другу. 

Базовые команды:
git --help: показывает возможности того что есть в git
- Мы можем видить большое кол-во компанд, cle

Инициализация репозитория:
1. Мы обращаемся к git и просим выполнить команду init 
После этого мы получаем сообщение Intilized empty repository in:
Что означает что проинициализирован пустой git репозиторий и показывается путь до нашей папки с проектом 

В нашем проекте ничего не изменилось. Что произошло на самом деле?
1. На самом деле создалась системная папка которая называется .git
2. Далее мы создаем базовую разметку
   - дальше нам нужно сообщить git про то что мы создали файл index.html и его нужно зафиксировать

Git построен на определенных этапах фиксации на определенной стадии
3. Базовая команда служащая для выяснения что сейчас происходит это: git status
   - Здесь есть интересная информация про то мы сейчас находимся в ветку master
   - Следующая информация что пока никаких коммитов нет: No commits yet. Мы не зафиксировали никаких изменений (версий)
   - Сообщает что есть: Untracked files - говорит о том что git не следит за файлом 
(Дальше он пишет, чтобы начать следить за этим файлом нужо прописать команду git add <file>) git add index.html
После данной команды git сообщает что есть изменения в файле index.html за которым он следит

Ветки - git имеет условно древовидную структуру когда есть одна ветка. 
- Ветка представляет из себя грубо говоря версию вашего проекта. Веток может быть много, и версий может быть много
- Мы по древовидной структуре разрабатываем проект, ветки можем совмещать друг с другом и получать какой-то итог

Изначально репозиторий создается пустой, чтобы в него что-то добавить нужно прописать git add <file>
Чтобы перестать следить (удалить) нужно прописать команду git rm --cached index.html

Мы добавили еще один файл и зафиксировали изменения. 
Чтобы добавить все файлы сразу нужно прописать команду git add . 










*/